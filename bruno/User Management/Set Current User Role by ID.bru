meta {
  name: Set Current User Role by ID
  type: http
  seq: 5
}

put {
  url: {{baseUrl}}/api/v1/users/me/role/{{customRoleId}}
  body: none
  auth: bearer
}

headers {
  Content-Type: application/json
}

auth:bearer {
  token: {{accessToken}}
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });
  
  test("Response should confirm role assignment", function() {
    const data = res.getBody();
    expect(data).to.have.property('success', true);
    expect(data).to.have.property('data');
    expect(data.data).to.have.property('user_id');
    expect(data.data).to.have.property('role');
  });
  
  test("Role should match the assigned role", function() {
    const data = res.getBody();
    expect(data.data.role).to.have.property('id');
    expect(data.data.role).to.have.property('name');
    expect(data.data.role).to.have.property('assigned_at');
  });
}

docs {
  # Set Current User Role by ID

  Assign a specific role to the currently authenticated user using the role ID.

  ## Headers
  ```
  Authorization: Bearer <access_token>
  ```

  ## Path Parameters
  - `roleId` (string, required): The UUID of the role to assign to the user

  ## Success Response - Role Assigned (200 OK)
  ```json
  {
    "success": true,
    "data": {
      "user_id": "550e8400-e29b-41d4-a716-446655440000",
      "role": {
        "id": "550e8400-e29b-41d4-a716-446655440001",
        "name": "DATAENGINEER",
        "description": "Data engineering and processing capabilities",
        "is_default": true,
        "assigned_at": "2024-01-15T16:00:00.000Z",
        "permissions": [
          {
            "id": "perm-1",
            "name": "data.read",
            "resource": "data",
            "action": "read",
            "description": "Read access to data resources"
          },
          {
            "id": "perm-2",
            "name": "data.write",
            "resource": "data",
            "action": "write",
            "description": "Write access to data resources"
          },
          {
            "id": "perm-3",
            "name": "data.create",
            "resource": "data",
            "action": "create",
            "description": "Create new data resources"
          }
        ]
      },
      "previous_role": {
        "id": "550e8400-e29b-41d4-a716-446655440002",
        "name": "VIEWER",
        "assigned_at": "2024-01-10T10:00:00.000Z"
      }
    },
    "message": "Role assigned successfully",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ## Success Response - Custom Role Assigned (200 OK)
  ```json
  {
    "success": true,
    "data": {
      "user_id": "550e8400-e29b-41d4-a716-446655440000",
      "role": {
        "id": "550e8400-e29b-41d4-a716-446655440005",
        "name": "CUSTOM_ANALYST",
        "description": "Custom role for data analysis with specific permissions",
        "is_default": false,
        "assigned_at": "2024-01-15T16:00:00.000Z",
        "permissions": [
          {
            "id": "perm-1",
            "name": "data.read",
            "resource": "data",
            "action": "read",
            "description": "Read access to data resources"
          },
          {
            "id": "perm-7",
            "name": "reports.create",
            "resource": "reports",
            "action": "create",
            "description": "Create new reports"
          }
        ]
      },
      "previous_role": null
    },
    "message": "Custom role assigned successfully",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ## Error Responses

  ### Bad Request (400)
  ```json
  {
    "success": false,
    "error": "Invalid role ID format",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ### Unauthorized (401)
  ```json
  {
    "success": false,
    "error": "Authentication required",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ### Invalid Token (401)
  ```json
  {
    "success": false,
    "error": "Invalid or expired token",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ### Forbidden (403)
  ```json
  {
    "success": false,
    "error": "Insufficient permissions to assign this role",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ### Role Not Found (404)
  ```json
  {
    "success": false,
    "error": "Role with ID '550e8400-e29b-41d4-a716-446655440999' not found",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ### User Not Found (404)
  ```json
  {
    "success": false,
    "error": "User not found",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ### Conflict (409)
  ```json
  {
    "success": false,
    "error": "User already has this role assigned",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ### Internal Server Error (500)
  ```json
  {
    "success": false,
    "error": "Internal server error",
    "timestamp": "2024-01-15T16:00:00.000Z"
  }
  ```

  ## Notes
  - Replaces the user's current role with the specified role
  - Returns information about both the new role and the previous role (if any)
  - The `assigned_at` timestamp is updated to the current time
  - Includes all permissions associated with the new role
  - Users can only assign roles to themselves through this endpoint
  - Some roles may require special permissions to assign
  - Role assignment is immediate and affects user permissions instantly
  - Requires valid authentication token
}
