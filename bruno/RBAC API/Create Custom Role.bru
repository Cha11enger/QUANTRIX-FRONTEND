meta {
  name: Create Custom Role
  type: http
  seq: 3
}

post {
  url: {{baseUrl}}/api/v1/roles
  body: json
  auth: bearer
}

headers {
  Content-Type: application/json
}

auth:bearer {
  token: {{accessToken}}
}

body:json {
  {
    "name": "CUSTOM_ROLE_{{testSuffix}}",
    "description": "Custom role created at {{$timestamp}}",
    "permissions": [
      "data.read",
      "reports.create",
      "dashboards.view"
    ]
  }
}

script:post-response {
  if (res.getStatus() === 201) {
    const data = res.getBody();
    if (data.success && data.data && data.data.role) {
      bru.setEnvVar("customRoleId", data.data.role.id);
      console.log("Custom role created successfully, ID saved:", data.data.role.id);
    }
  }
}

tests {
  test("Status should be 201", function() {
    expect(res.getStatus()).to.equal(201);
  });
  
  test("Response should contain created role", function() {
    const data = res.getBody();
    expect(data).to.have.property('success', true);
    expect(data).to.have.property('data');
    expect(data.data).to.have.property('role');
    expect(data.data.role).to.have.property('id');
    expect(data.data.role).to.have.property('name');
  });
  
  test("Role name should contain test suffix", function() {
    const data = res.getBody();
    expect(data.data.role.name).to.include('CUSTOM_ROLE_');
  });
}

docs {
  # Create Custom Role

  Create a new custom role with specified permissions.

  ## Headers
  ```
  Authorization: Bearer <access_token>
  Content-Type: application/json
  ```

  ## Request Body
  ```json
  {
    "name": "CUSTOM_ANALYST",
    "description": "Custom analyst role with specific permissions",
    "permissions": [
      "data.read",
      "reports.create",
      "dashboards.view"
    ]
  }
  ```

  ### Request Fields
  - `name` (string, required): Role name (must be unique, alphanumeric with underscores)
  - `description` (string, optional): Role description
  - `permissions` (array, optional): Array of permission names to assign to the role

  ## Success Response (201 Created)
  ```json
  {
    "success": true,
    "data": {
      "role": {
        "id": "550e8400-e29b-41d4-a716-446655440003",
        "name": "CUSTOM_ANALYST",
        "description": "Custom analyst role with specific permissions",
        "is_default": false,
        "is_active": true,
        "created_at": "2024-01-15T10:30:00.000Z",
        "updated_at": "2024-01-15T10:30:00.000Z",
        "created_by": "550e8400-e29b-41d4-a716-446655440000",
        "permissions": [
          {
            "id": "perm-4",
            "name": "data.read",
            "resource": "data",
            "action": "read",
            "description": "Read access to data resources"
          },
          {
            "id": "perm-5",
            "name": "reports.create",
            "resource": "reports",
            "action": "create",
            "description": "Create new reports"
          },
          {
            "id": "perm-6",
            "name": "dashboards.view",
            "resource": "dashboards",
            "action": "view",
            "description": "View dashboards"
          }
        ]
      }
    },
    "message": "Role created successfully",
    "timestamp": "2024-01-15T10:30:00.000Z"
  }
  ```

  ## Error Responses

  ### Bad Request (400)
  ```json
  {
    "success": false,
    "error": "Role name is required",
    "timestamp": "2024-01-15T10:30:00.000Z"
  }
  ```

  ### Conflict (409)
  ```json
  {
    "success": false,
    "error": "Role with name 'CUSTOM_ANALYST' already exists",
    "timestamp": "2024-01-15T10:30:00.000Z"
  }
  ```

  ### Unauthorized (401)
  ```json
  {
    "success": false,
    "error": "Authentication required",
    "timestamp": "2024-01-15T10:30:00.000Z"
  }
  ```

  ### Forbidden (403)
  ```json
  {
    "success": false,
    "error": "Insufficient permissions to create roles",
    "timestamp": "2024-01-15T10:30:00.000Z"
  }
  ```

  ### Unprocessable Entity (422)
  ```json
  {
    "success": false,
    "error": "Invalid permission: 'invalid.permission'",
    "timestamp": "2024-01-15T10:30:00.000Z"
  }
  ```

  ### Internal Server Error (500)
  ```json
  {
    "success": false,
    "error": "Internal server error",
    "timestamp": "2024-01-15T10:30:00.000Z"
  }
  ```

  ## Notes
  - Only users with appropriate permissions can create roles
  - Role names must be unique and follow naming conventions (alphanumeric with underscores)
  - Default roles (ACCOUNTADMIN, DATAENGINEER, DATAANALYST, VIEWER) cannot be created
  - Invalid permissions in the request will result in a 422 error
  - Created roles are automatically set as active and non-default
  - The creator is automatically recorded in the `created_by` field
}
